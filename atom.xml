<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>so实用</title>
  
  <subtitle>你想要的，这里都会有</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://danielxin2004.github.io/"/>
  <updated>2020-02-01T06:02:02.180Z</updated>
  <id>https://danielxin2004.github.io/</id>
  
  <author>
    <name>Xin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>通过编辑不同的ssh key实现一台电脑两个hexo博客</title>
    <link href="https://danielxin2004.github.io/2020/02/01/%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E4%B8%A4%E4%B8%AAhexo%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
    <id>https://danielxin2004.github.io/2020/02/01/%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E4%B8%A4%E4%B8%AAhexo%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%AE%9E%E7%8E%B0/</id>
    <published>2020-02-01T03:23:00.000Z</published>
    <updated>2020-02-01T06:02:02.180Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sat Feb 01 2020 14:12:36 GMT+0800 (GMT+08:00) --><h1 id="设置不同的ssh-key"><a href="#设置不同的ssh-key" class="headerlink" title="设置不同的ssh key"></a>设置不同的ssh key</h1><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><ul><li>因为之前已经生成了一个ssh key所以在之后如果想要同时使用两个不同的ssh key就需要更改不同的文件名和取消全局设置，分别对于两个不同的hexo博客来上传ssh key</li><li>一台电脑，可以生成多个ssh key只需要设置不同的文件名，所以不存在一个ssh key绑定多个github账户的情况，同时绑定会使github混乱导致无法上传等错误</li></ul><hr><p><strong>这里有一个要求：你已经完成第二个博客的相关配置，如配置hexo文件夹等</strong></p><h2 id="查看已经生成的密钥"><a href="#查看已经生成的密钥" class="headerlink" title="查看已经生成的密钥"></a>查看已经生成的密钥</h2><p>首先进入.ssh/的文件夹下面：</p><p>终端的话直接输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ~&#x2F;.ssh&#x2F;</span><br></pre></td></tr></table></figure><p>也可以手动进入</p><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><p>直接在.ssh/文件夹中右击打开git终端，输入以下指令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -f  ~&#x2F;.ssh&#x2F;这里是新密钥名称 -C &quot;这里是你的邮箱&quot;</span><br></pre></td></tr></table></figure><p>这里注意新密钥的名称不能与旧的相同</p><h3 id="配置config"><a href="#配置config" class="headerlink" title="配置config"></a>配置config</h3><p>在终端直接输入以下指令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch config</span><br></pre></td></tr></table></figure><p>打开config文件<br>输入以下配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#第一个账号，默认使用的账号，不用做任何更改</span><br><span class="line">Host github.com</span><br><span class="line">HostName github.com</span><br><span class="line">User git</span><br><span class="line">IdentityFile ~&#x2F;.ssh&#x2F;id_rsa</span><br><span class="line"></span><br><span class="line">#第二个新账号，#&quot;xxxxxx&quot;为前缀名，随意设置，之后需要用到</span><br><span class="line">Host xxxxxx.github.com</span><br><span class="line">HostName github.com</span><br><span class="line">User git</span><br><span class="line">IdentityFile ~&#x2F;.ssh&#x2F;这里是你创建的新密钥的名称</span><br></pre></td></tr></table></figure><h3 id="复制新的ssh-key上传到github"><a href="#复制新的ssh-key上传到github" class="headerlink" title="复制新的ssh key上传到github"></a>复制新的ssh key上传到github</h3><p>这里方法跟之前第一个账户一样，就不再赘述<br><strong>注意不要复制错了或者上传错账户了！！！</strong></p><hr><h2 id="清除本地ssh缓存，将新旧密钥添加"><a href="#清除本地ssh缓存，将新旧密钥添加" class="headerlink" title="清除本地ssh缓存，将新旧密钥添加"></a>清除本地ssh缓存，将新旧密钥添加</h2><p>在.ssh目录下打开终端，依次输入以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-add -D</span><br><span class="line">ssh-add xxxxxx #旧密钥名称，如果没改就是id_rsa</span><br><span class="line">ssh-add xxxxxx #新密钥名称</span><br></pre></td></tr></table></figure><h3 id="验证配置"><a href="#验证配置" class="headerlink" title="验证配置"></a>验证配置</h3><p>依次输入，第一个是旧的，第一个是新的其中“xxxxxxx”是你之前在config中的命名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br><span class="line">ssh -T git@xxxxxxx.github.com</span><br></pre></td></tr></table></figure><p>分别显示以下字符，说明你配置成功了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi 你的用户名! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure><h2 id="取消全局设置，单独设置每个账户的用户名、邮箱"><a href="#取消全局设置，单独设置每个账户的用户名、邮箱" class="headerlink" title="取消全局设置，单独设置每个账户的用户名、邮箱"></a>取消全局设置，单独设置每个账户的用户名、邮箱</h2><p>执行以下命令，取消全局设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global --unset user.name</span><br><span class="line">git config --global --unset user.email</span><br></pre></td></tr></table></figure><p>分别cd到你博客的.git目录下分别执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config user.name &quot;这里是用户名&quot;</span><br><span class="line">git config user.email &quot;这里是你的邮箱&quot;</span><br></pre></td></tr></table></figure><p>如果报错，检查一下你有没有进入到.git目录下，.git目录是隐藏的，需要打开隐藏的文件选项，不懂如何开启请自行百度</p><p>具体路径\你的博客根目录.deploy_git.git</p><p>执行以下命令查看配置是否成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --list</span><br></pre></td></tr></table></figure><h2 id="更改博客配置文件git地址"><a href="#更改博客配置文件git地址" class="headerlink" title="更改博客配置文件git地址"></a>更改博客配置文件git地址</h2><p>这里第一个博客不用动，正常你应该早就配置好了<br>打开第二个博客根目录，打开配置文件<br>像这样改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@xxxxxx.github.com:你的用户名&#x2F;你的用户名.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>这里注意那个“xxxxxx”是之前在ssh目录下config文件中设置的那个名称<br>只要你之前安装了第二个博客的相关配置，ok！大功告成。<br>接下来只要</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>你的第二个博客就上传完成了，记得检查你的第一个博客上传有没有问题</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      有些时候一台电脑上需要同时完成两个hexo博客项目的上载，这时就需要利用不同的ssh key来完成分类
    
    </summary>
    
    
      <category term="Hexo教程" scheme="https://danielxin2004.github.io/categories/Hexo%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="hexo博客" scheme="https://danielxin2004.github.io/tags/hexo%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="教程" scheme="https://danielxin2004.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
</feed>
